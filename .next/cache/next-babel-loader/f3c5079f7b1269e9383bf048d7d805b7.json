{"ast":null,"code":"var _jsxFileName = \"/Users/shonnavalli/cs48/project-s1-t1-music-queue/pages/App.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport Results from '../components/Results';\nconst spotifySearchURL = \"https://api.spotify.com/v1/search?q=\";\nconst spotifyProfileURL = \"https://api.spotify.com/v1/me?access_token=\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      if (window.location.href.indexOf('_token') == -1) {\n        Router.push('/Login');\n      }\n\n      console.log('cdm ran');\n    });\n\n    _defineProperty(this, \"submitTrackForm\", event => {\n      event.preventDefault();\n      const {\n        search_term\n      } = this.state;\n      const {\n        access_token\n      } = this.props.url.query;\n\n      if (search_term != '') {\n        fetch(`${spotifySearchURL}${search_term}&type=track&access_token=${access_token}`).then(response => response.json()).then(json => {\n          this.setState({\n            tracks: json.tracks.items\n          });\n          return json.tracks;\n        });\n      }\n    });\n\n    _defineProperty(this, \"renderSearchResults\", () => {\n      if (this.state.tracks.length > 1) {\n        const {\n          tracks\n        } = this.state;\n        const {\n          access_token\n        } = this.props.url.query;\n        let allResults = [];\n        tracks.forEach((track, index) => {\n          if (track.album != undefined && track.album.images[0] != undefined) {\n            let hasImage = track.album.images[0];\n            allResults.push(__jsx(Results, {\n              key: track.id,\n              imageURL: hasImage.url,\n              name: track.name,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 23\n              }\n            }, __jsx(Link, {\n              href: `/track-albums?id=${track.id}&access_token=${access_token}`,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 24\n              }\n            }, __jsx(\"a\", {\n              className: \"text-muted\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 27\n              }\n            }, \"View \", track.name, \" albums\"))));\n          }\n        });\n        return allResults;\n      } else {\n        return '';\n      }\n    });\n\n    this.state = {\n      search_term: '',\n      tracks: []\n    };\n    this.submitTrackForm = this.submitTrackForm.bind(this);\n    this.renderSearchResults = this.renderSearchResults.bind(this);\n  }\n\n  render() {\n    console.log('this.state', this.state);\n    const {\n      user\n    } = this.props;\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"row mt-5 justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, \"Welcome \", user.display_name.split(\" \")[0], \"!\")), __jsx(\"div\", {\n      className: \"row mt-5 justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, this.state.tracks.length > 1 ? `Search results for \"${this.state.search_term}\"` : 'Search the Spotify API for your favorite track')), __jsx(\"div\", {\n      className: \"row mt-5 justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, __jsx(\"form\", {\n      onSubmit: event => this.submitTrackForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 23\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control text-center\",\n      placeholder: \"enter track name\",\n      onChange: event => this.setState({\n        search_term: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 27\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 23\n      }\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      className: \"form-control btn btn-outline-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 27\n      }\n    }, \"Search\")))), __jsx(\"div\", {\n      className: \"row mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, this.renderSearchResults()));\n  }\n\n}\n\nApp.getInitialProps = async function (context) {\n  const {\n    access_token\n  } = context.query;\n  const res = await fetch(spotifyProfileURL + access_token);\n  const user = await res.json();\n  return {\n    user\n  };\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/shonnavalli/cs48/project-s1-t1-music-queue/pages/App.js"],"names":["React","Component","fetch","Router","Link","Layout","Results","spotifySearchURL","spotifyProfileURL","App","constructor","props","window","location","href","indexOf","push","console","log","event","preventDefault","search_term","state","access_token","url","query","then","response","json","setState","tracks","items","length","allResults","forEach","track","index","album","undefined","images","hasImage","id","name","submitTrackForm","bind","renderSearchResults","render","user","display_name","split","target","value","getInitialProps","context","res"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport fetch from 'isomorphic-unfetch'\nimport Router from 'next/router'\nimport Link from 'next/link'\nimport Layout from '../components/Layout'\nimport Results from '../components/Results'\nconst spotifySearchURL = \"https://api.spotify.com/v1/search?q=\";\nconst spotifyProfileURL = \"https://api.spotify.com/v1/me?access_token=\";\n\nclass App extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          search_term: '',\n          tracks: []\n      }\n      this.submitTrackForm = this.submitTrackForm.bind(this);\n      this.renderSearchResults = this.renderSearchResults.bind(this);\n  }\n\n  componentDidMount = () => {\n      if(window.location.href.indexOf('_token')==-1){\n          Router.push('/Login')\n      }\n      console.log('cdm ran')\n  }\n\n  submitTrackForm = (event) => {\n      event.preventDefault()\n      const { search_term } = this.state\n      const { access_token } = this.props.url.query\n      \n      if(search_term!=''){\n        fetch(`${spotifySearchURL}${search_term}&type=track&access_token=${access_token}`)\n          .then(response => response.json())\n          .then(json => {\n              this.setState({ tracks: json.tracks.items })\n              return json.tracks\n          })\n      }\n  }\n\n  renderSearchResults = () => {\n      if(this.state.tracks.length > 1){\n          const { tracks } = this.state\n          const { access_token } = this.props.url.query \n          let allResults = []\n          tracks.forEach((track, index) => {\n             if(track.album !=undefined && track.album.images[0] !=undefined){\n                  let hasImage = track.album.images[0]\n                  allResults.push(\n                      <Results\n                          key={track.id} \n                          imageURL={hasImage.url}\n                          name={track.name} \n                      >                         \n                       <Link href={`/track-albums?id=${track.id}&access_token=${access_token}`}>\n                          <a className=\"text-muted\">View {track.name} albums</a>\n                       </Link>\n                      </Results>\n                  )\n              }\n          })\n          return allResults\n      }\n      else{\n          return ''\n      }\n  }\n  \n  render() {\n      console.log('this.state', this.state)\n      const {user} = this.props\n      return (\n          <Layout>\n                <div className=\"row mt-5 justify-content-center\">\n                    <h3>Welcome {user.display_name.split(\" \")[0]}!</h3>\n                </div>\n              <div className=\"row mt-5 justify-content-center\">\n                  <h3>\n                      {\n                          this.state.tracks.length > 1 \n                          ? \n                          `Search results for \"${this.state.search_term}\"` \n                          : \n                          'Search the Spotify API for your favorite track'\n                      }\n                  </h3>\n              </div>\n              <div className=\"row mt-5 justify-content-center\">\n                  <form onSubmit={event => this.submitTrackForm(event)}>\n                      <div className=\"form-group\">\n                          <input \n                              type=\"text\" \n                              className=\"form-control text-center\" \n                              placeholder=\"enter track name\"\n                              onChange={event => this.setState({ search_term: event.target.value })} \n                          /> \n                      </div>\n                      <div className=\"form-group\">\n                          <button type=\"submit\" className=\"form-control btn btn-outline-success\">Search</button> \n                      </div>\n                  </form>\n              </div>\n              <div className=\"row mt-5\">\n                  {this.renderSearchResults()}\n              </div>\n          </Layout>\n      );\n  }\n}\n\nApp.getInitialProps = async function(context) {\n    const { access_token } = context.query\n    const res = await fetch(spotifyProfileURL+access_token)\n    const user = await res.json()\n    return { \n        user,\n    }\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}