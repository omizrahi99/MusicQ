{"ast":null,"code":"var _jsxFileName = \"/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/components/Input.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport \"./style.css\";\n\nclass Input extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      score: 0,\n      sent_to_database: false\n    };\n    this.incrementScore = this.incrementScore.bind(this);\n    this.decrementScore = this.decrementScore.bind(this);\n  }\n\n  incrementScore() {\n    this.setState(prevState => {\n      return {\n        score: prevState.score + 1,\n        sent_to_database: false\n      };\n    });\n  }\n\n  decrementScore() {\n    this.setState(prevState => {\n      // if the score is 0; don't go negative!\n      if (prevState.score == 0) {\n        return {\n          score: 0,\n          sent_to_database: false\n        };\n      } // score is not 0; subtract 1\n      else {\n          return {\n            score: prevState.score - 1,\n            sent_to_database: false\n          };\n        }\n    });\n  }\n\n  submit() {\n    // Selecting the input element and get its value\n    var inputVal = document.getElementById(\"myInput\").value;\n    print(inputVal);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"Input to MongoDB Database\"), __jsx(\"form\", {\n      className: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, __jsx(\"label\", {\n      for: \"sname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"Song Name \"), __jsx(\"input\", {\n      type: \"text\",\n      id: \"sname\",\n      name: \"sname\",\n      placeholder: \"enter song name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    })), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, this.state.score), __jsx(\"button\", {\n      onClick: this.incrementScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Upvote\"), __jsx(\"button\", {\n      onClick: this.decrementScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Downvote\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), __jsx(\"button\", {\n      onClick: this.submit,\n      className: \"button\",\n      style: {\n        verticalAlign: \"middle\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \" \", __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \" Save to Database \")), __jsx(\"h1\", {\n      style: {\n        display: this.state.sent_to_database ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \" \", \"Sent\", \" \"));\n  }\n\n}\n\nexport default Input;","map":{"version":3,"sources":["/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/components/Input.js"],"names":["React","Input","Component","constructor","state","score","sent_to_database","incrementScore","bind","decrementScore","setState","prevState","submit","inputVal","document","getElementById","value","print","render","verticalAlign","display"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nclass Input extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      score: 0,\n      sent_to_database: false\n    };\n    this.incrementScore = this.incrementScore.bind(this);\n    this.decrementScore = this.decrementScore.bind(this);\n  }\n\n  incrementScore() {\n    this.setState(prevState => {\n      return {\n        score: prevState.score + 1,\n        sent_to_database: false\n      };\n    });\n  }\n\n  decrementScore() {\n    this.setState(prevState => {\n      // if the score is 0; don't go negative!\n      if (prevState.score == 0) {\n        return { score: 0, sent_to_database: false };\n      }\n      // score is not 0; subtract 1\n      else {\n        return {\n          score: prevState.score - 1,\n          sent_to_database: false\n        };\n      }\n    });\n  }\n\n  submit() {\n    // Selecting the input element and get its value\n    var inputVal = document.getElementById(\"myInput\").value;\n    print(inputVal);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Input to MongoDB Database</h1>\n        <form className>\n          <label for=\"sname\">Song Name </label>\n          <input\n            type=\"text\"\n            id=\"sname\"\n            name=\"sname\"\n            placeholder=\"enter song name\"\n          ></input>\n        </form>\n\n        <h1>{this.state.score}</h1>\n        <button onClick={this.incrementScore}>Upvote</button>\n        <button onClick={this.decrementScore}>Downvote</button>\n        <br />\n        <br />\n        <button\n          onClick={this.submit}\n          className=\"button\"\n          style={{ verticalAlign: \"middle\" }}\n        >\n          {\" \"}\n          <span> Save to Database </span>\n        </button>\n\n        <h1 style={{ display: this.state.sent_to_database ? \"block\" : \"none\" }}>\n          {\" \"}\n          Sent{\" \"}\n        </h1>\n      </div>\n    );\n  }\n}\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}