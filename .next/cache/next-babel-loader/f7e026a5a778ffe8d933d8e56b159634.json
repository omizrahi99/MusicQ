{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport unfetch from \"isomorphic-unfetch\";\nexport async function fetch(url, options) {\n  const response = await unfetch(url, options);\n  return response.json();\n}\nexport async function fetchWithToken(url, token, options) {\n  return fetch(url, _objectSpread({}, options, {\n    headers: _objectSpread({}, options === null || options === void 0 ? void 0 : options.headers, {\n      authorization: `Bearer ${token}`\n    })\n  }));\n}","map":{"version":3,"sources":["/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/utils/fetch.js"],"names":["unfetch","fetch","url","options","response","json","fetchWithToken","token","headers","authorization"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,oBAApB;AAEA,OAAO,eAAeC,KAAf,CAAqBC,GAArB,EAA0BC,OAA1B,EAAmC;AACxC,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACE,GAAD,EAAMC,OAAN,CAA9B;AAEA,SAAOC,QAAQ,CAACC,IAAT,EAAP;AACD;AAED,OAAO,eAAeC,cAAf,CAA8BJ,GAA9B,EAAmCK,KAAnC,EAA0CJ,OAA1C,EAAmD;AACxD,SAAOF,KAAK,CAACC,GAAD,oBACPC,OADO;AAEVK,IAAAA,OAAO,oBACFL,OADE,aACFA,OADE,uBACFA,OAAO,CAAEK,OADP;AAELC,MAAAA,aAAa,EAAG,UAASF,KAAM;AAF1B;AAFG,KAAZ;AAOD","sourcesContent":["import unfetch from \"isomorphic-unfetch\";\n\nexport async function fetch(url, options) {\n  const response = await unfetch(url, options);\n\n  return response.json();\n}\n\nexport async function fetchWithToken(url, token, options) {\n  return fetch(url, {\n    ...options,\n    headers: {\n      ...options?.headers,\n      authorization: `Bearer ${token}`\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}