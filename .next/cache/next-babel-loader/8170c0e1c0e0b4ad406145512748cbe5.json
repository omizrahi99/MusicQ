{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport Results from '../components/Results';\nconst spotifySearchURL = \"https://api.spotify.com/v1/search?q=\";\n\nclass SearchArtists extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      if (window.location.href.indexOf('_token') == -1) {\n        Router.push('/spotify');\n      }\n\n      console.log('cdm ran');\n    });\n\n    _defineProperty(this, \"submitArtistForm\", event => {\n      event.preventDefault();\n      const {\n        search_term\n      } = this.state;\n      const {\n        access_token\n      } = this.props.url.query;\n      console.log(access_token);\n\n      if (search_term != '') {\n        fetch(`${spotifySearchURL}${search_term}&type=artist&access_token=${access_token}`).then(response => response.json()).then(json => {\n          this.setState({\n            artists: json.artists.items\n          });\n          return json.artists;\n        });\n      }\n    });\n\n    _defineProperty(this, \"renderSearchResults\", () => {\n      if (this.state.artists.length > 1) {\n        const {\n          artists\n        } = this.state;\n        const {\n          access_token\n        } = this.props.url.query;\n        let allResults = [];\n        artists.forEach((artist, index) => {\n          if (artist.images[0] != undefined) {\n            let hasImage = artist.images[0];\n            allResults.push(__jsx(Results, {\n              key: artist.id,\n              imageURL: hasImage.url,\n              name: artist.name\n            }, __jsx(Link, {\n              href: `/artist-albums?id=${artist.id}&access_token=${access_token}`\n            }, __jsx(\"a\", {\n              className: \"text-muted\"\n            }, \"View \", artist.name, \" albums\"))));\n          }\n        });\n        return allResults;\n      } else {\n        return '';\n      }\n    });\n\n    this.state = {\n      search_term: '',\n      artists: []\n    };\n    this.submitArtistForm = this.submitArtistForm.bind(this);\n    this.renderSearchResults = this.renderSearchResults.bind(this);\n  }\n\n  render() {\n    console.log('this.state', this.state);\n    return __jsx(Layout, null, __jsx(\"div\", {\n      className: \"row mt-5 justify-content-center\"\n    }, __jsx(\"h3\", null, this.state.artists.length > 1 ? `Search results for \"${this.state.search_term}\"` : 'Search the Spotify API for your favorite artist')), __jsx(\"div\", {\n      className: \"row mt-5 justify-content-center\"\n    }, __jsx(\"form\", {\n      onSubmit: event => this.submitArtistForm(event)\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control text-center\",\n      placeholder: \"enter artist name\",\n      onChange: event => this.setState({\n        search_term: event.target.value\n      })\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      className: \"form-control btn btn-outline-success\"\n    }, \"Search\")))), __jsx(\"div\", {\n      className: \"row mt-5\"\n    }, this.renderSearchResults()));\n  }\n\n}\n\nexport default SearchArtists;","map":null,"metadata":{},"sourceType":"module"}