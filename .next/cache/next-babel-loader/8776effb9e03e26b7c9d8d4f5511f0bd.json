{"ast":null,"code":"var _jsxFileName = \"/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/components/Table.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useCallback, useEffect } from \"react\";\nimport { fetch } from \"../utils/fetch\";\nexport default function Table(props) {\n  const {\n    0: score,\n    1: setScore\n  } = useState(props.score); // this callback renders the score when intially\n  // rendered\n\n  useEffect(() => {\n    setScore(props.score);\n  }, [props.score]); // handles changes when upvoting score of each of song dynamically\n\n  const increment = useCallback(async event => {\n    await fetch(\"/api/increment\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // the body of this song is built from state\n      body: JSON.stringify({\n        song: props.name\n      })\n    }); // forces a call to the hook useSWR\n  }, []);\n  return __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, props.name), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, score), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    onClick: () => {\n      setScore(score + 1);\n      increment();\n      props.useEffect();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"upvote\")), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    onClick: () => {\n      if (score > 0) {\n        setScore(score - 1);\n      }\n\n      decrement();\n      props.useEffect();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \" \", \"downvote\")));\n}","map":{"version":3,"sources":["/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/components/Table.js"],"names":["useState","useCallback","useEffect","fetch","Table","props","score","setScore","increment","event","method","headers","body","JSON","stringify","song","name","decrement"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAACK,KAAK,CAACC,KAAP,CAAlC,CADmC,CAGnC;AACA;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,QAAQ,CAACF,KAAK,CAACC,KAAP,CAAR;AACD,GAFQ,EAEN,CAACD,KAAK,CAACC,KAAP,CAFM,CAAT,CALmC,CASnC;;AACA,QAAME,SAAS,GAAGP,WAAW,CAAC,MAAMQ,KAAN,IAAe;AAC3C,UAAMN,KAAK,CAAC,gBAAD,EAAmB;AAC5BO,MAAAA,MAAM,EAAE,KADoB;AAE5BC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFmB;AAK5B;AACAC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,IAAI,EAAEV,KAAK,CAACW;AADO,OAAf;AANsB,KAAnB,CAAX,CAD2C,CAW3C;AACD,GAZ4B,EAY1B,EAZ0B,CAA7B;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,KAAK,CAACW,IAAX,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,KAAL,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AACE,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAE,MAAAA,SAAS;AACTH,MAAAA,KAAK,CAACH,SAAN;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAJF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AACE,IAAA,OAAO,EAAE,MAAM;AACb,UAAII,KAAK,GAAG,CAAZ,EAAe;AACbC,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AACDW,MAAAA,SAAS;AACTZ,MAAAA,KAAK,CAACH,SAAN;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASG,GATH,aAFF,CAhBF,CADF;AAkCD","sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\nimport { fetch } from \"../utils/fetch\";\n\nexport default function Table(props) {\n  const [score, setScore] = useState(props.score);\n\n  // this callback renders the score when intially\n  // rendered\n  useEffect(() => {\n    setScore(props.score);\n  }, [props.score]);\n\n  // handles changes when upvoting score of each of song dynamically\n  const increment = useCallback(async event => {\n    await fetch(\"/api/increment\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // the body of this song is built from state\n      body: JSON.stringify({\n        song: props.name\n      })\n    });\n    // forces a call to the hook useSWR\n  }, []);\n\n  return (\n    <tr>\n      {/* output name and score of song*/}\n      <td>{props.name}</td>\n      <td>{score}</td>\n      <td>\n        {/* button to upvote*/}\n        <button\n          onClick={() => {\n            setScore(score + 1);\n            increment();\n            props.useEffect();\n          }}\n        >\n          upvote\n        </button>\n      </td>\n      <td>\n        {/* button to downvote. Cannot be < 0*/}\n        <button\n          onClick={() => {\n            if (score > 0) {\n              setScore(score - 1);\n            }\n            decrement();\n            props.useEffect();\n          }}\n        >\n          {\" \"}\n          downvote\n        </button>\n      </td>\n    </tr>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}