{"ast":null,"code":"var _jsxFileName = \"/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/components/Input.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport \"./style.css\";\nimport Retrieve from \"./Retrieve\";\nimport { Populate } from \"./Populate\";\n\nclass Input extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      score: 0,\n      name: \"\",\n      sent_to_database: false\n    };\n    this.incrementScore = this.incrementScore.bind(this);\n    this.decrementScore = this.decrementScore.bind(this);\n    this.nameChange = this.nameChange.bind(this);\n    this.submit = this.submit.bind(this);\n  } // increments the score of the particular song\n\n\n  incrementScore() {\n    this.setState(prevState => {\n      return {\n        score: prevState.score + 1,\n        name: prevState.name,\n        sent_to_database: false\n      };\n    });\n  } // decrements the score of the particular song\n\n\n  decrementScore() {\n    this.setState(prevState => {\n      // if the score is 0; don't go negative!\n      if (prevState.score == 0) {\n        return {\n          score: 0,\n          name: prevState.name,\n          sent_to_database: false\n        };\n      } // score is not 0; subtract 1\n      else {\n          return {\n            score: prevState.score - 1,\n            name: prevState.name,\n            sent_to_database: false\n          };\n        }\n    });\n  } // handles changes to name of song dynamically\n\n\n  nameChange() {\n    this.setState(prevState => {\n      return {\n        score: prevState.score,\n        name: event.target.value,\n        sent_to_database: false\n      };\n    });\n  } // submit information to the MongoDB Database\n\n\n  async submit() {\n    await fetch(\"/api/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // the body of this message is built from state\n      body: JSON.stringify({\n        song: this.state.name,\n        score: this.state.score\n      })\n    }); // update state to conditionally render message to user\n\n    this.setState(prevState => {\n      return {\n        score: prevState.score,\n        name: prevState.name,\n        sent_to_database: true\n      };\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, __jsx(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, __jsx(\"label\", {\n      form: \"sname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Song Name \"), __jsx(\"input\", {\n      type: \"text\",\n      id: \"sname\",\n      name: \"sname\",\n      value: this.state.name,\n      onChange: this.nameChange,\n      placeholder: \"enter song name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    })), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, this.state.score), __jsx(\"button\", {\n      onClick: this.incrementScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, \"Upvote\"), __jsx(\"button\", {\n      onClick: this.decrementScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, \"Downvote\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }), __jsx(\"button\", {\n      onClick: this.submit,\n      className: \"button\",\n      style: {\n        verticalAlign: \"middle\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, \" \", __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, \" Save to Database \")), __jsx(\"h1\", {\n      style: {\n        display: this.state.sent_to_database ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, \" \", this.state.name, \" saved to MongoDB Database\", \" \"), __jsx(Retrieve, {\n      update: this.state.sent_to_database,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Input;","map":{"version":3,"sources":["/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/components/Input.js"],"names":["React","fetch","Retrieve","Populate","Input","Component","constructor","state","score","name","sent_to_database","incrementScore","bind","decrementScore","nameChange","submit","setState","prevState","event","target","value","method","headers","body","JSON","stringify","song","render","verticalAlign","display"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport \"./style.css\";\nimport Retrieve from \"./Retrieve\";\nimport { Populate } from \"./Populate\";\n\nclass Input extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      score: 0,\n      name: \"\",\n      sent_to_database: false\n    };\n    this.incrementScore = this.incrementScore.bind(this);\n    this.decrementScore = this.decrementScore.bind(this);\n    this.nameChange = this.nameChange.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  // increments the score of the particular song\n  incrementScore() {\n    this.setState(prevState => {\n      return {\n        score: prevState.score + 1,\n        name: prevState.name,\n        sent_to_database: false\n      };\n    });\n  }\n\n  // decrements the score of the particular song\n  decrementScore() {\n    this.setState(prevState => {\n      // if the score is 0; don't go negative!\n      if (prevState.score == 0) {\n        return {\n          score: 0,\n          name: prevState.name,\n          sent_to_database: false\n        };\n      }\n      // score is not 0; subtract 1\n      else {\n        return {\n          score: prevState.score - 1,\n          name: prevState.name,\n          sent_to_database: false\n        };\n      }\n    });\n  }\n\n  // handles changes to name of song dynamically\n  nameChange() {\n    this.setState(prevState => {\n      return {\n        score: prevState.score,\n        name: event.target.value,\n        sent_to_database: false\n      };\n    });\n  }\n\n  // submit information to the MongoDB Database\n  async submit() {\n    await fetch(\"/api/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // the body of this message is built from state\n      body: JSON.stringify({\n        song: this.state.name,\n        score: this.state.score\n      })\n    });\n\n    // update state to conditionally render message to user\n    this.setState(prevState => {\n      return {\n        score: prevState.score,\n        name: prevState.name,\n        sent_to_database: true\n      };\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {/* Gather name of song */}\n        <form>\n          <label form=\"sname\">Song Name </label>\n          <input\n            type=\"text\"\n            id=\"sname\"\n            name=\"sname\"\n            value={this.state.name}\n            onChange={this.nameChange}\n            placeholder=\"enter song name\"\n          ></input>\n        </form>\n\n        {/* Gather score of song */}\n        <h1>{this.state.score}</h1>\n        <button onClick={this.incrementScore}>Upvote</button>\n        <button onClick={this.decrementScore}>Downvote</button>\n        <br />\n        <br />\n\n        {/* sumbit name and score of song to MongoDB Database*/}\n        <button\n          onClick={this.submit}\n          className=\"button\"\n          style={{ verticalAlign: \"middle\" }}\n        >\n          {\" \"}\n          <span> Save to Database </span>\n        </button>\n\n        {/* Conditional rendering to display data sent to MongoDB Database*/}\n        <h1 style={{ display: this.state.sent_to_database ? \"block\" : \"none\" }}>\n          {\" \"}\n          {this.state.name} saved to MongoDB Database{\" \"}\n        </h1>\n        <Retrieve update={this.state.sent_to_database} />\n      </div>\n    );\n  }\n}\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}