{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport unfetch from \"isomorphic-unfetch\";\nexport function fetch(url, options) {\n  var response;\n  return _regeneratorRuntime.async(function fetch$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(unfetch(url, options));\n\n        case 2:\n          response = _context.sent;\n          return _context.abrupt(\"return\", response.json());\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/utils/fetch.js"],"names":["unfetch","fetch","url","options","response","json"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,oBAApB;AAEA,OAAO,SAAeC,KAAf,CAAqBC,GAArB,EAA0BC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACkBH,OAAO,CAACE,GAAD,EAAMC,OAAN,CADzB;;AAAA;AACCC,UAAAA,QADD;AAAA,2CAEEA,QAAQ,CAACC,IAAT,EAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import unfetch from \"isomorphic-unfetch\";\n\nexport async function fetch(url, options) {\n  const response = await unfetch(url, options);\n  return response.json();\n}\n"]},"metadata":{},"sourceType":"module"}