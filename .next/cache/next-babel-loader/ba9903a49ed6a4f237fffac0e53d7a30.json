{"ast":null,"code":"var _jsxFileName = \"/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/components/Retrieve.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useState } from \"react\";\nimport useSWR from \"swr\";\nimport { fetch } from \"../utils/fetch\";\nimport Table from \"./Table\";\nimport \"./style.css\"; //create your forceUpdate hook\n\nfunction useForceUpdate() {\n  var _useState = useState(0),\n      value = _useState[0],\n      setValue = _useState[1]; // integer state\n\n\n  return function () {\n    return setValue(function (value) {\n      return ++value;\n    });\n  }; // update the state to force render\n}\n\nexport default function Retrieve(props) {\n  var _this = this;\n\n  var obj = JSON.parse(props.data.result);\n  var tableComponents = obj.map(function (item) {\n    return __jsx(Table, {\n      key: item._id,\n      song: item.song.song,\n      score: item.song.score,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    });\n  }); // {data} can't do this with Javascript objects\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Song\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Score\")), tableComponents)));\n}","map":{"version":3,"sources":["/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/components/Retrieve.js"],"names":["React","useState","useSWR","fetch","Table","useForceUpdate","value","setValue","Retrieve","props","obj","JSON","parse","data","result","tableComponents","map","item","_id","song","score"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,aAAP,C,CAEA;;AACA,SAASC,cAAT,GAA0B;AAAA,kBACEJ,QAAQ,CAAC,CAAD,CADV;AAAA,MACjBK,KADiB;AAAA,MACVC,QADU,iBACe;;;AACvC,SAAO;AAAA,WAAMA,QAAQ,CAAC,UAAAD,KAAK;AAAA,aAAI,EAAEA,KAAN;AAAA,KAAN,CAAd;AAAA,GAAP,CAFwB,CAEiB;AAC1C;;AAED,eAAe,SAASE,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,MAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,IAAN,CAAWC,MAAtB,CAAV;AACA,MAAMC,eAAe,GAAGL,GAAG,CAACM,GAAJ,CAAQ,UAAAC,IAAI,EAAI;AACtC,WACE,MAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAjB;AAAsB,MAAA,IAAI,EAAED,IAAI,CAACE,IAAL,CAAUA,IAAtC;AAA4C,MAAA,KAAK,EAAEF,IAAI,CAACE,IAAL,CAAUC,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJuB,CAAxB,CAFsC,CAQtC;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF,EAKGL,eALH,CADF,CADF,CADF;AAaD","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport useSWR from \"swr\";\nimport { fetch } from \"../utils/fetch\";\nimport Table from \"./Table\";\nimport \"./style.css\";\n\n//create your forceUpdate hook\nfunction useForceUpdate() {\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => ++value); // update the state to force render\n}\n\nexport default function Retrieve(props) {\n  let obj = JSON.parse(props.data.result);\n  const tableComponents = obj.map(item => {\n    return (\n      <Table key={item._id} song={item.song.song} score={item.song.score} />\n    );\n  });\n\n  // {data} can't do this with Javascript objects\n  return (\n    <div>\n      <table>\n        <tbody>\n          <tr>\n            <th>Song</th>\n            <th>Score</th>\n          </tr>\n          {tableComponents}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}