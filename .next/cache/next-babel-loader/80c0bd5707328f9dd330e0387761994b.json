{"ast":null,"code":"var _jsxFileName = \"/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/pages/Retrieve.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from \"swr\";\nimport { fetch } from \"../utils/fetch\";\nimport Table from \"../components/Table\";\nimport \"./style.css\";\nexport default function Retrieve(props) {\n  var _this = this;\n\n  // swr returns a data and error parameter\n  var _useSWR = useSWR(\"/api/all\", fetch, {\n    // By default, useSWR will call the endpoint we specified (in this case, /api/all) every time we click away from\n    // the page. This can be really useful if we want to make sure the web app is always showing the latest data,\n    // but in this case, we don't need that behavior. See what happens if you set these options to true or remove them!\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false\n  }),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 12\n      }\n    }, \"Failed to load\");\n  }\n\n  if (!data) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    }, \"Loading\");\n  }\n\n  var obj = JSON.parse(JSON.stringify(data.result));\n  var tableComponents = obj.map(function (item) {\n    return __jsx(Table, {\n      key: item._id,\n      song: item.song.song,\n      score: item.song.score,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    });\n  }); // {data} can't do this with Javascript objects\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, props.sent_to_database), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Score\")), tableComponents)));\n}","map":{"version":3,"sources":["/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/pages/Retrieve.js"],"names":["useSWR","fetch","Table","Retrieve","props","revalidateOnFocus","revalidateOnReconnect","data","error","obj","JSON","parse","stringify","result","tableComponents","map","item","_id","song","score","sent_to_database"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,aAAP;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC;AADsC,gBAEdJ,MAAM,CAAC,UAAD,EAAaC,KAAb,EAAoB;AAChD;AACA;AACA;AACAI,IAAAA,iBAAiB,EAAE,KAJ6B;AAKhDC,IAAAA,qBAAqB,EAAE;AALyB,GAApB,CAFQ;AAAA,MAE9BC,IAF8B,WAE9BA,IAF8B;AAAA,MAExBC,KAFwB,WAExBA,KAFwB;;AAUtC,MAAIA,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD;;AAED,MAAI,CAACD,IAAL,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AAED,MAAIE,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeL,IAAI,CAACM,MAApB,CAAX,CAAV;AAEA,MAAMC,eAAe,GAAGL,GAAG,CAACM,GAAJ,CAAQ,UAAAC,IAAI,EAAI;AACtC,WACE,MAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAjB;AAAsB,MAAA,IAAI,EAAED,IAAI,CAACE,IAAL,CAAUA,IAAtC;AAA4C,MAAA,KAAK,EAAEF,IAAI,CAACE,IAAL,CAAUC,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJuB,CAAxB,CApBsC,CA0BtC;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKf,KAAK,CAACgB,gBAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF,EAKGN,eALH,CADF,CADF,CADF;AAaD","sourcesContent":["import useSWR from \"swr\";\nimport { fetch } from \"../utils/fetch\";\nimport Table from \"../components/Table\";\nimport \"./style.css\";\n\nexport default function Retrieve(props) {\n  // swr returns a data and error parameter\n  const { data, error } = useSWR(\"/api/all\", fetch, {\n    // By default, useSWR will call the endpoint we specified (in this case, /api/all) every time we click away from\n    // the page. This can be really useful if we want to make sure the web app is always showing the latest data,\n    // but in this case, we don't need that behavior. See what happens if you set these options to true or remove them!\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false\n  });\n\n  if (error) {\n    return <div>Failed to load</div>;\n  }\n\n  if (!data) {\n    return <div>Loading</div>;\n  }\n\n  let obj = JSON.parse(JSON.stringify(data.result));\n\n  const tableComponents = obj.map(item => {\n    return (\n      <Table key={item._id} song={item.song.song} score={item.song.score} />\n    );\n  });\n\n  // {data} can't do this with Javascript objects\n  return (\n    <div>\n      <table>\n        <tbody>\n          <tr>\n            <th>{props.sent_to_database}</th>\n            <th>Score</th>\n          </tr>\n          {tableComponents}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}