{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/pages/Retrieve.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Layout from \"../components/Layout\";\n\nvar Retrive = /*#__PURE__*/function (_React$Component) {\n  _inherits(Retrive, _React$Component);\n\n  var _super = _createSuper(Retrive);\n\n  function Retrive() {\n    var _this;\n\n    _classCallCheck(this, Retrive);\n\n    _this = _super.call(this);\n    _this.state = {\n      songs: []\n    };\n    return _this;\n  }\n\n  _createClass(Retrive, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function componentWillMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"/api\").then(function (response) {\n                return response.json();\n              }) // changes into javscript object\n              .then(function (data) {\n                _this2.setState({\n                  character: data,\n                  isLoading: false\n                });\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, \"Data from the Mongo DB Database (WIP)\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, \"Storing song_name and score ... \")));\n    }\n  }]);\n\n  return Retrive;\n}(React.Component);\n\nexport default Retrive;","map":{"version":3,"sources":["/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/pages/Retrieve.js"],"names":["Layout","Retrive","state","songs","fetch","then","response","json","data","setState","character","isLoading","React","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;;IAEMC,O;;;;;AACJ,qBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAFY;AAKb;;;;;;;;;;;;+CAGOC,KAAK,CAAC,MAAD,CAAL,CACHC,IADG,CACE,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eADV,EAC+B;AAD/B,eAEHF,IAFG,CAEE,UAAAG,IAAI,EAAI;AACZ,gBAAA,MAAI,CAACC,QAAL,CAAc;AACZC,kBAAAA,SAAS,EAAEF,IADC;AAEZG,kBAAAA,SAAS,EAAE;AAFC,iBAAd;AAID,eAPG,C;;;;;;;;;;;6BAUC;AACP,aACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFF,CADF,CADF;AAQD;;;;EA5BmBC,KAAK,CAACC,S;;AA+B5B,eAAeZ,OAAf","sourcesContent":["import Layout from \"../components/Layout\";\n\nclass Retrive extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      songs: []\n    };\n  }\n\n  async componentWillMount() {\n    await fetch(\"/api\")\n      .then(response => response.json()) // changes into javscript object\n      .then(data => {\n        this.setState({\n          character: data,\n          isLoading: false\n        });\n      });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div>\n          <h1>Data from the Mongo DB Database (WIP)</h1>\n          <p>Storing song_name and score ... </p>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Retrive;\n"]},"metadata":{},"sourceType":"module"}