{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/shonnavalli/cs48/project-s1-t1-music-queue/pages/App.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport { spotifySearchURL } from '../constants';\n\nvar SearchArtists = /*#__PURE__*/function (_Component) {\n  _inherits(SearchArtists, _Component);\n\n  var _super = _createSuper(SearchArtists);\n\n  function SearchArtists(props) {\n    var _this;\n\n    _classCallCheck(this, SearchArtists);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      if (window.location.href.indexOf('_token') == -1) {\n        Router.push('/spotify');\n      }\n\n      console.log('cdm ran');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitArtistForm\", function (event) {\n      event.preventDefault();\n      var search_term = _this.state.search_term;\n      var access_token = _this.props.url.query.access_token;\n\n      if (search_term != '') {\n        fetch(\"\".concat(spotifySearchURL).concat(search_term, \"&type=artist&access_token=\").concat(access_token)).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          _this.setState({\n            artists: json.artists.items\n          });\n\n          return json.artists;\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderSearchResults\", function () {\n      if (_this.state.artists.length > 1) {\n        var artists = _this.state.artists;\n        var access_token = _this.props.url.query.access_token;\n        var allResults = [];\n        artists.forEach(function (artist, index) {\n          if (artist.images[0] != undefined) {\n            var hasImage = artist.images[0];\n            allResults.push(__jsx(Results, {\n              key: artist.id,\n              imageURL: hasImage.url,\n              name: artist.name,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 25\n              }\n            }, __jsx(Link, {\n              href: \"/artist-albums?id=\".concat(artist.id, \"&access_token=\").concat(access_token),\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 26\n              }\n            }, __jsx(\"a\", {\n              className: \"text-muted\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 29\n              }\n            }, \"View \", artist.name, \" albums\"))));\n          }\n        });\n        return allResults;\n      } else {\n        return '';\n      }\n    });\n\n    _this.state = {\n      search_term: '',\n      artists: []\n    };\n    return _this;\n  }\n\n  _createClass(SearchArtists, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('this.state', this.state);\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"row mt-5 justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, this.state.artists.length > 1 ? \"Search results for \\\"\".concat(this.state.search_term, \"\\\"\") : 'Search the Spotify API for your favorite artist')), __jsx(\"div\", {\n        className: \"row mt-5 justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, __jsx(\"form\", {\n        onSubmit: function onSubmit(event) {\n          return _this2.submitArtistForm(event);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }, __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control text-center\",\n        placeholder: \"enter artist name\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            search_term: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, __jsx(\"button\", {\n        type: \"submit\",\n        className: \"form-control btn btn-outline-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }\n      }, \"Search\")))), __jsx(\"div\", {\n        className: \"row mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, this.renderSearchResults()));\n    }\n  }]);\n\n  return SearchArtists;\n}(Component);\n\nexport default SearchArtists;","map":{"version":3,"sources":["/Users/shonnavalli/cs48/project-s1-t1-music-queue/pages/App.js"],"names":["React","Component","fetch","Router","Link","spotifySearchURL","SearchArtists","props","window","location","href","indexOf","push","console","log","event","preventDefault","search_term","state","access_token","url","query","then","response","json","setState","artists","items","length","allResults","forEach","artist","index","images","undefined","hasImage","id","name","submitArtistForm","target","value","renderSearchResults"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport fetch from 'isomorphic-unfetch'\nimport Router from 'next/router'\nimport Link from 'next/link'\nimport { spotifySearchURL } from '../constants'\n\nclass SearchArtists extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            search_term: '',\n            artists: []\n        }\n    }\n\n    componentDidMount = () => {\n        if(window.location.href.indexOf('_token')==-1){\n            Router.push('/spotify')\n        }\n        console.log('cdm ran')\n    }\n\n    submitArtistForm = (event) => {\n        event.preventDefault()\n        const { search_term } = this.state\n        const { access_token } = this.props.url.query\n        if(search_term!=''){\n          fetch(`${spotifySearchURL}${search_term}&type=artist&access_token=${access_token}`)\n            .then(response => response.json())\n            .then(json => {\n                this.setState({ artists: json.artists.items })\n                return json.artists\n            })\n        }\n    }\n\n    renderSearchResults = () => {\n        if(this.state.artists.length > 1){\n            const { artists } = this.state\n            const { access_token } = this.props.url.query \n            let allResults = []\n            artists.forEach((artist, index) => {\n                if(artist.images[0]!=undefined){\n                    let hasImage = artist.images[0]\n                    allResults.push(\n                        <Results\n                            key={artist.id} \n                            imageURL={hasImage.url}\n                            name={artist.name} \n                        >                         \n                         <Link href={`/artist-albums?id=${artist.id}&access_token=${access_token}`}>\n                            <a className=\"text-muted\">View {artist.name} albums</a>\n                         </Link>\n                        </Results>\n                    )\n                }\n            })\n            return allResults\n        }else{\n            return ''\n        }\n    }\n    \n    render() {\n        console.log('this.state', this.state)\n        return (\n            <Layout>\n                <div className=\"row mt-5 justify-content-center\">\n                    <h3>\n                        {\n                            this.state.artists.length > 1 \n                            ? \n                            `Search results for \"${this.state.search_term}\"` \n                            : \n                            'Search the Spotify API for your favorite artist'\n                        }\n                    </h3>\n                </div>\n                <div className=\"row mt-5 justify-content-center\">\n                    <form onSubmit={event => this.submitArtistForm(event)}>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\" \n                                className=\"form-control text-center\" \n                                placeholder=\"enter artist name\"\n                                onChange={event => this.setState({ search_term: event.target.value })} \n                            /> \n                        </div>\n                        <div className=\"form-group\">\n                            <button type=\"submit\" className=\"form-control btn btn-outline-success\">Search</button> \n                        </div>\n                    </form>\n                </div>\n                <div className=\"row mt-5\">\n                    {this.renderSearchResults()}\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default SearchArtists;\n\n\n"]},"metadata":{},"sourceType":"module"}