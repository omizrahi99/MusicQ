{"ast":null,"code":"var _jsxFileName = \"/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/pages/Retrieve.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from \"swr\";\nimport { fetch } from \"../utils/fetch\";\nimport Table from \"../components/Table\";\nexport default function Retrieve() {\n  var _this = this;\n\n  // swr returns a data and error parameter\n  var _useSWR = useSWR(\"/api/all\", fetch, {\n    // By default, useSWR will call the endpoint we specified (in this case, /api/all) every time we click away from\n    // the page. This can be really useful if we want to make sure the web app is always showing the latest data,\n    // but in this case, we don't need that behavior. See what happens if you set these options to true or remove them!\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false\n  }),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }\n    }, \"Failed to load\");\n  }\n\n  if (!data) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    }, \"Loading\");\n  }\n\n  var obj = JSON.parse(JSON.stringify(data.result));\n  var tableComponents = obj.map(function (item) {\n    return __jsx(Table, {\n      song: item.song.song,\n      score: item.song.score,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    });\n  }); // {data} can't do this with Javascript objects\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Song\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Score\")), tableComponents, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, JSON.stringify(data.result)), \";\");\n}","map":{"version":3,"sources":["/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/pages/Retrieve.js"],"names":["useSWR","fetch","Table","Retrieve","revalidateOnFocus","revalidateOnReconnect","data","error","obj","JSON","parse","stringify","result","tableComponents","map","item","song","score"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC;AADiC,gBAETH,MAAM,CAAC,UAAD,EAAaC,KAAb,EAAoB;AAChD;AACA;AACA;AACAG,IAAAA,iBAAiB,EAAE,KAJ6B;AAKhDC,IAAAA,qBAAqB,EAAE;AALyB,GAApB,CAFG;AAAA,MAEzBC,IAFyB,WAEzBA,IAFyB;AAAA,MAEnBC,KAFmB,WAEnBA,KAFmB;;AAUjC,MAAIA,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD;;AAED,MAAI,CAACD,IAAL,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AAED,MAAIE,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeL,IAAI,CAACM,MAApB,CAAX,CAAV;AAEA,MAAMC,eAAe,GAAGL,GAAG,CAACM,GAAJ,CAAQ,UAAAC,IAAI,EAAI;AACtC,WAAO,MAAC,KAAD;AAAO,MAAA,IAAI,EAAEA,IAAI,CAACC,IAAL,CAAUA,IAAvB;AAA6B,MAAA,KAAK,EAAED,IAAI,CAACC,IAAL,CAAUC,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFuB,CAAxB,CApBiC,CAwBjC;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF,EAKGJ,eALH,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,IAAI,CAACE,SAAL,CAAeL,IAAI,CAACM,MAApB,CAAN,CANF,MADF;AAUD","sourcesContent":["import useSWR from \"swr\";\nimport { fetch } from \"../utils/fetch\";\nimport Table from \"../components/Table\";\n\nexport default function Retrieve() {\n  // swr returns a data and error parameter\n  const { data, error } = useSWR(\"/api/all\", fetch, {\n    // By default, useSWR will call the endpoint we specified (in this case, /api/all) every time we click away from\n    // the page. This can be really useful if we want to make sure the web app is always showing the latest data,\n    // but in this case, we don't need that behavior. See what happens if you set these options to true or remove them!\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false\n  });\n\n  if (error) {\n    return <div>Failed to load</div>;\n  }\n\n  if (!data) {\n    return <div>Loading</div>;\n  }\n\n  let obj = JSON.parse(JSON.stringify(data.result));\n\n  const tableComponents = obj.map(item => {\n    return <Table song={item.song.song} score={item.song.score} />;\n  });\n\n  // {data} can't do this with Javascript objects\n  return (\n    <div>\n      <tr>\n        <th>Song</th>\n        <th>Score</th>\n      </tr>\n      {tableComponents}\n      <div>{JSON.stringify(data.result)}</div>;\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}