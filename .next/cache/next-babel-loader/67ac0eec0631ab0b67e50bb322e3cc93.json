{"ast":null,"code":"var _jsxFileName = \"/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/pages/Retrieve.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport useSWR from \"swr\";\n\nfunction Retrieve() {\n  // swr returns a data and error parameter\n  var _useSWR = useSWR(\"/api/all\", fetch, {\n    // By default, useSWR will call the endpoint we specified (in this case, /api/all) every time we click away from\n    // the page. This can be really useful if we want to make sure the web app is always showing the latest data,\n    // but in this case, we don't need that behavior. See what happens if you set these options to true or remove them!\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false\n  }),\n      data = _useSWR.data; // if (error) return <div>failed to load</div>;\n  // if (!data) return <div>loading...</div>;\n  // console.log(data.songs);\n\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, data.songs));\n}\n\nexport default Retrieve;","map":{"version":3,"sources":["/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/pages/Retrieve.js"],"names":["Layout","useSWR","Retrieve","fetch","revalidateOnFocus","revalidateOnReconnect","data","songs"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,SAASC,QAAT,GAAoB;AAClB;AADkB,gBAEDD,MAAM,CAAC,UAAD,EAAaE,KAAb,EAAoB;AACzC;AACA;AACA;AACAC,IAAAA,iBAAiB,EAAE,KAJsB;AAKzCC,IAAAA,qBAAqB,EAAE;AALkB,GAApB,CAFL;AAAA,MAEVC,IAFU,WAEVA,IAFU,EAUlB;AACA;AAEA;;;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,IAAI,CAACC,KAAX,CADF,CADF;AAKD;;AACD,eAAeL,QAAf","sourcesContent":["import Layout from \"../components/Layout\";\nimport useSWR from \"swr\";\n\nfunction Retrieve() {\n  // swr returns a data and error parameter\n  const { data } = useSWR(\"/api/all\", fetch, {\n    // By default, useSWR will call the endpoint we specified (in this case, /api/all) every time we click away from\n    // the page. This can be really useful if we want to make sure the web app is always showing the latest data,\n    // but in this case, we don't need that behavior. See what happens if you set these options to true or remove them!\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false\n  });\n\n  // if (error) return <div>failed to load</div>;\n  // if (!data) return <div>loading...</div>;\n\n  // console.log(data.songs);\n\n  return (\n    <Layout>\n      <div>{data.songs}</div>\n    </Layout>\n  );\n}\nexport default Retrieve;\n"]},"metadata":{},"sourceType":"module"}