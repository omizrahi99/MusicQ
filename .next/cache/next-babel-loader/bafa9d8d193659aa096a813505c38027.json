{"ast":null,"code":"var _jsxFileName = \"/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/pages/Login.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Router from \"next/router\";\nimport Layout from \"../components/Layout\";\nimport config from \"../utils/config\";\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\"; // Replace with your app's client ID, redirect URI and desired scopes\n\nconst clientId = config.CLIENT_ID;\nconst redirectUri = config.REDIRECT_URI;\nconst scopes = [\"user-read-currently-playing\", \"user-read-playback-state\"];\nconst spotifyWebApiURL = `https://accounts.spotify.com/authorize/?client_id=${clientId}&response_type=token&redirect_uri=${redirectUri}&scope=${scopes}`;\nconsole.log(clientId);\nconsole.log(redirectUri);\nconsole.log(spotifyWebApiURL);\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      let url = window.location.href;\n\n      if (url.indexOf(\"_token\") > -1) {\n        let access_token = url.split(\"_token=\")[1].split(\"&\")[0].trim();\n        this.setState({\n          access_token\n        });\n      }\n    });\n\n    _defineProperty(this, \"makeSpotifyCall\", event => {\n      event.preventDefault();\n      const {\n        access_token\n      } = this.state;\n\n      if (access_token === \"\") {\n        document.location = spotifyWebApiURL;\n      } else {\n        Router.push({\n          pathname: \"/App\",\n          query: {\n            access_token\n          }\n        });\n      }\n    });\n\n    this.state = {\n      access_token: \"\"\n    };\n  }\n\n  render() {\n    const styles = {\n      border: \"0.2em solid #1ecd97\",\n      textAlign: \"center\",\n      display: \"inline-block\",\n      fontSize: \"16px\",\n      backgroundColor: \"transparent\",\n      borderRadius: \"2em\",\n      color: \"#1ecd97\",\n      cursor: \"pointer\",\n      fontSize: \"3vmin\",\n      padding: \"0.7em 1.5em\",\n      textTransform: \"uppercase\",\n      transition: \"all 0.25s ease\"\n    };\n    const {\n      access_token\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"Login\",\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), __jsx(\"header\", {\n      className: \"Login-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, __jsx(\"button\", {\n      onClick: () => {\n        this.makeSpotifyCall(event);\n      },\n      className: \"btn btn--Login-link\",\n      style: styles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, access_token !== \"\" ? \"Make a Room\" : \"Login to Spotify\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/gautam/Desktop/cs/48/project-s1-t1-music-queue/pages/Login.js"],"names":["React","Component","Router","Layout","config","authEndpoint","clientId","CLIENT_ID","redirectUri","REDIRECT_URI","scopes","spotifyWebApiURL","console","log","Login","constructor","props","url","window","location","href","indexOf","access_token","split","trim","setState","event","preventDefault","state","document","push","pathname","query","render","styles","border","textAlign","display","fontSize","backgroundColor","borderRadius","color","cursor","padding","textTransform","transition","makeSpotifyCall"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Router from \"next/router\";\nimport Layout from \"../components/Layout\";\nimport config from \"../utils/config\";\n\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\n// Replace with your app's client ID, redirect URI and desired scopes\nconst clientId = config.CLIENT_ID;\nconst redirectUri = config.REDIRECT_URI;\nconst scopes = [\"user-read-currently-playing\", \"user-read-playback-state\"];\nconst spotifyWebApiURL = `https://accounts.spotify.com/authorize/?client_id=${clientId}&response_type=token&redirect_uri=${redirectUri}&scope=${scopes}`;\n\nconsole.log(clientId);\nconsole.log(redirectUri);\nconsole.log(spotifyWebApiURL);\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      access_token: \"\"\n    };\n  }\n  componentDidMount = () => {\n    let url = window.location.href;\n    if (url.indexOf(\"_token\") > -1) {\n      let access_token = url\n        .split(\"_token=\")[1]\n        .split(\"&\")[0]\n        .trim();\n      this.setState({ access_token });\n    }\n  };\n\n  makeSpotifyCall = event => {\n    event.preventDefault();\n    const { access_token } = this.state;\n    if (access_token === \"\") {\n      document.location = spotifyWebApiURL;\n    } else {\n      Router.push({\n        pathname: \"/App\",\n        query: { access_token }\n      });\n    }\n  };\n\n  render() {\n    const styles = {\n      border: \"0.2em solid #1ecd97\",\n      textAlign: \"center\",\n      display: \"inline-block\",\n      fontSize: \"16px\",\n      backgroundColor: \"transparent\",\n      borderRadius: \"2em\",\n      color: \"#1ecd97\",\n      cursor: \"pointer\",\n      fontSize: \"3vmin\",\n      padding: \"0.7em 1.5em\",\n      textTransform: \"uppercase\",\n      transition: \"all 0.25s ease\"\n    };\n\n    const { access_token } = this.state;\n\n    return (\n      <div className=\"Login\" style={{ textAlign: \"center\" }}>\n        <br />\n        <br />\n        <header className=\"Login-header\">\n          {\n            <button\n              onClick={() => {\n                this.makeSpotifyCall(event);\n              }}\n              className=\"btn btn--Login-link\"\n              style={styles}\n            >\n              {access_token !== \"\" ? \"Make a Room\" : \"Login to Spotify\"}\n            </button>\n          }\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}