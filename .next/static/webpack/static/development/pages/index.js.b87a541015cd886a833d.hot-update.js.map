{"version":3,"file":"static/webpack/static/development/pages/index.js.b87a541015cd886a833d.hot-update.js","sources":["webpack:///./components/Table.js","webpack:///./node_modules/@babel/runtime/helpers/esm/readOnlyError.js"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\nimport { fetch } from \"../utils/fetch\";\n\nexport default function Table(props) {\n  const [score, setScore] = useState(props.score);\n\n  useEffect(() => {\n    score = props.score;\n  }, [props.score]);\n\n  // // handles changes when upvoting score of each of song dynamically\n  // const updateScore = useCallback(\n  //   async event => {\n  //     await fetch(\"/api/add\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\"\n  //       },\n  //       // the body of this song is built from state\n  //       body: JSON.stringify({\n  //         song: name,\n  //         score: score\n  //       })\n  //     });\n  //     // forces a call to the hook useSWR\n  //   },\n  //   [name, score]\n  // );\n\n  return (\n    <tr>\n      {/* output name and score of song*/}\n      <td>{props.song}</td>\n      <td>{score}</td>\n      <td>\n        {/* button to upvote*/}\n        <button\n          onClick={() => {\n            setScore(score + 1);\n            //updateScore();\n          }}\n        >\n          {\" \"}\n          upvote\n        </button>\n      </td>\n      <td>\n        {/* button to downvote. Cannot be < 0*/}\n        <button\n          onClick={() => {\n            if (score > 0) setScore(score - 1);\n            //updateScore();\n          }}\n        >\n          {\" \"}\n          downvote\n        </button>\n      </td>\n    </tr>\n  );\n}\n","export default function _readOnlyError(name) {\n  throw new Error(\"\\\"\" + name + \"\\\" is read-only\");\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;;;;;;;;;AC5DA;AAAA;AAAA;AACA;AACA;;;;A","sourceRoot":""}