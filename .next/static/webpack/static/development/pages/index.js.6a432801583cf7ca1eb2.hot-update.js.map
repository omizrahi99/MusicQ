{"version":3,"file":"static/webpack/static/development/pages/index.js.6a432801583cf7ca1eb2.hot-update.js","sources":["webpack:///./components/Table.js"],"sourcesContent":["import { useState, useCallBack } from \"react\";\nimport { fetch } from \"../utils/fetch\";\n\nfunction Table(props) {\n  const [name, setName] = useState(props.song);\n  const [score, setScore] = useState(props.score);\n\n  // handles changes when upvoting score of each of song dynamically\n  const upvote = useCallBack(\n    async event => {\n      await fetch(\"/api/add\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        // the body of this song is built from state\n        body: JSON.stringify({\n          song: name,\n          score: score\n        })\n      });\n      // forces a call to the hook useSWR\n    },\n    [name, score]\n  );\n\n  return (\n    <tr>\n      <td>{name}</td>\n      <td>{score}</td>\n      <td>\n        <button>onClick={() => setScore(score + 1)}> upvote</button>\n      </td>\n      <td>\n        <button>onClick={() => setScore(score - 1)}> downvote</button>\n      </td>\n    </tr>\n  );\n}\n\nexport default Table;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AANA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}