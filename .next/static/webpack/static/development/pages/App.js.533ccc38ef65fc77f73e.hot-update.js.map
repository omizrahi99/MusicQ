{"version":3,"file":"static/webpack/static/development/pages/App.js.533ccc38ef65fc77f73e.hot-update.js","sources":["webpack:///./pages/App.js"],"sourcesContent":["import React, { Component } from 'react'\nimport fetch from 'isomorphic-unfetch'\nimport Router from 'next/router'\nimport { withRouter } from 'next/router'\nimport Link from 'next/link'\nimport Layout from '../components/Layout'\nimport Results from '../components/Results'\nconst spotifySearchURL = \"https://api.spotify.com/v1/search\";\n\nclass SearchArtists extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            search_term: '',\n            artists: []\n        }\n    }\n\n    componentDidMount = () => {\n        if(window.location.href.indexOf('_token')==-1){\n            Router.push('/spotify')\n        }\n        console.log('cdm ran')\n    }\n\n    submitArtistForm = (event) => {\n        event.preventDefault()\n        const { search_term } = this.state\n        const { access_token } = this.props.url.query\n        if(search_term!=''){\n          fetch(`${spotifySearchURL}${search_term}&type=artist&access_token=${access_token}`)\n            .then(response => response.json())\n            .then(json => {\n                this.setState({ artists: json.artists.items })\n                return json.artists\n            })\n        }\n    }\n\n    renderSearchResults = () => {\n        if(this.state.artists.length > 1){\n            const { artists } = this.state\n            const { access_token } = this.props.url.query \n            let allResults = []\n            artists.forEach((artist, index) => {\n                if(artist.images[0]!=undefined){\n                    let hasImage = artist.images[0]\n                    allResults.push(\n                        <Results\n                            key={artist.id} \n                            imageURL={hasImage.url}\n                            name={artist.name} \n                        >                         \n                         <Link href={`/artist-albums?id=${artist.id}&access_token=${access_token}`}>\n                            <a className=\"text-muted\">View {artist.name} albums</a>\n                         </Link>\n                        </Results>\n                    )\n                }\n            })\n            return allResults\n        }else{\n            return ''\n        }\n    }\n    \n    render() {\n        console.log('this.state', this.state)\n        return (\n            <Layout>\n                <div className=\"row mt-5 justify-content-center\">\n                    <h3>\n                        {\n                            this.state.artists.length > 1 \n                            ? \n                            `Search results for \"${this.state.search_term}\"` \n                            : \n                            'Search the Spotify API for your favorite artist'\n                        }\n                    </h3>\n                </div>\n                <div className=\"row mt-5 justify-content-center\">\n                    <form onSubmit={event => this.submitArtistForm(event)}>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\" \n                                className=\"form-control text-center\" \n                                placeholder=\"enter artist name\"\n                                onChange={event => this.setState({ search_term: event.target.value })} \n                            /> \n                        </div>\n                        <div className=\"form-group\">\n                            <button type=\"submit\" className=\"form-control btn btn-outline-success\">Search</button> \n                        </div>\n                    </form>\n                </div>\n                <div className=\"row mt-5\">\n                    {this.renderSearchResults()}\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default withRouter(SearchArtists);\n\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AASA;AACA;AACA;AACA;AAAA;AACA;AACA;AAdA;AAgBA;AADA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AA5BA;AA8BA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArDA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAiDA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA5FA;AACA;AA8FA;;;;A","sourceRoot":""}