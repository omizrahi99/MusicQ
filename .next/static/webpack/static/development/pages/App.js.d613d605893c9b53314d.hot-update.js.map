{"version":3,"file":"static/webpack/static/development/pages/App.js.d613d605893c9b53314d.hot-update.js","sources":["webpack:///./pages/App.js"],"sourcesContent":["import React, { Component } from 'react'\nimport fetch from 'isomorphic-unfetch'\nimport Router from 'next/router'\nimport Link from 'next/link'\nimport Layout from '../components/Layout'\nimport Results from '../components/Results'\nconst spotifySearchURL = \"https://api.spotify.com/v1/search?q=\";\nconst spotifyProfileURL = \"https://api.spotify.com/v1/me?access_token=\";\n\nclass App extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          search_term: '',\n          tracks: []\n      }\n      this.submitTrackForm = this.submitTrackForm.bind(this);\n      this.renderSearchResults = this.renderSearchResults.bind(this);\n  }\n\n  componentDidMount = () => {\n      if(window.location.href.indexOf('_token')==-1){\n          Router.push('/Login')\n      }\n      console.log('cdm ran')\n  }\n\n  submitTrackForm = (event) => {\n      event.preventDefault()\n      const { search_term } = this.state\n      const { access_token } = this.props.url.query\n      \n      if(search_term!=''){\n        fetch(`${spotifySearchURL}${search_term}&type=track&access_token=${access_token}`)\n          .then(response => response.json())\n          .then(json => {\n              this.setState({ tracks: json.tracks.items })\n              return json.tracks\n          })\n      }\n  }\n\n  renderSearchResults = () => {\n      if(this.state.tracks.length > 1){\n          const { tracks } = this.state\n          const { access_token } = this.props.url.query \n          let allResults = []\n          tracks.forEach((track, index) => {\n             if(track.album !=undefined && track.album.images[0] !=undefined){\n                  let hasImage = track.album.images[0]\n                  allResults.push(\n                      <Results\n                          key={track.id} \n                          imageURL={hasImage.url}\n                          name={track.name} \n                      >                         \n                       <Link href={`/track-albums?id=${track.id}&access_token=${access_token}`}>\n                          <a className=\"text-muted\">View {track.name} albums</a>\n                       </Link>\n                      </Results>\n                  )\n              }\n          })\n          return allResults\n      }\n      else{\n          return ''\n      }\n  }\n  \n  render() {\n      console.log('this.state', this.state)\n      const {user} = this.props\n      return (\n          <Layout>\n                <div className=\"row mt-5 justify-content-center\">\n                    <h3>Welcome {user.display_name.split(\" \")[0]}!</h3>\n                </div>\n              <div className=\"row mt-5 justify-content-center\">\n                  <h3>\n                      {\n                          this.state.tracks.length > 1 \n                          ? \n                          `Search results for \"${this.state.search_term}\"` \n                          : \n                          'Search the Spotify API for your favorite track'\n                      }\n                  </h3>\n              </div>\n              <div className=\"row mt-5 justify-content-center\">\n                  <form onSubmit={event => this.submitTrackForm(event)}>\n                      <div className=\"form-group\">\n                          <input \n                              type=\"text\" \n                              className=\"form-control text-center\" \n                              placeholder=\"enter track name\"\n                              onChange={event => this.setState({ search_term: event.target.value })} \n                          /> \n                      </div>\n                      <div className=\"form-group\">\n                          <button type=\"submit\" className=\"form-control btn btn-outline-success\">Search</button> \n                      </div>\n                  </form>\n              </div>\n              <div className=\"row mt-5\">\n                  {this.renderSearchResults()}\n              </div>\n          </Layout>\n      );\n  }\n}\n\nApp.getInitialProps = async function(context) {\n    const { access_token } = context.query\n    const res = await fetch(spotifyProfileURL+access_token)\n    const user = await res.json()\n    return { \n        user,\n    }\n}\n\n\nexport default App;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAWA;AACA;AACA;AACA;AAAA;AACA;AACA;AAhBA;AAkBA;AADA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AA/BA;AAiCA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAzDA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AAQA;AACA;;;AAmpGA;AACA;AAsGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAKA;AADA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;;;;A","sourceRoot":""}