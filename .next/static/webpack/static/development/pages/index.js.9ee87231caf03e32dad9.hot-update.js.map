{"version":3,"file":"static/webpack/static/development/pages/index.js.9ee87231caf03e32dad9.hot-update.js","sources":["webpack:///./components/Input.js"],"sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nclass Input extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      score: 0,\n      songName: \"\",\n      sent_to_database: false\n    };\n    this.incrementScore = this.incrementScore.bind(this);\n    this.decrementScore = this.decrementScore.bind(this);\n    this.songNameChange = this.songNameChange.bind(this);\n  }\n\n  // increments the score of the particular song\n  incrementScore() {\n    this.setState(prevState => {\n      return {\n        score: prevState.score + 1,\n        songName: prevState.songName,\n        sent_to_database: false\n      };\n    });\n  }\n\n  // decrements the score of the particular song\n  decrementScore() {\n    this.setState(prevState => {\n      // if the score is 0; don't go negative!\n      if (prevState.score == 0) {\n        return {\n          score: 0,\n          songName: prevState.songName,\n          sent_to_database: false\n        };\n      }\n      // score is not 0; subtract 1\n      else {\n        return {\n          score: prevState.score - 1,\n          songName: prevState.songName,\n          sent_to_database: false\n        };\n      }\n    });\n  }\n\n  // handles changes to name of song dynamically\n  songNameChange() {\n    this.setState(prevState => {\n      return {\n        score: prevState.score,\n        songName: event.target.value,\n        sent_to_database: false\n      };\n    });\n  }\n\n  // submit information to the MongoDB Database\n  submit() {\n    // Selecting the input element and get its value\n    var inputVal = document.getElementById(\"sname\").value;\n    print(inputVal);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Input to MongoDB Database</h1>\n\n        {/* Gather name of song */}\n        <form className>\n          <label for=\"sname\">Song Name </label>\n          <input\n            type=\"text\"\n            id=\"sname\"\n            name=\"sname\"\n            value={this.state.songName}\n            onChange={this.songNameChange}\n            placeholder=\"enter song name\"\n          ></input>\n        </form>\n\n        {/* Gather score of song */}\n        <h1>{this.state.score}</h1>\n        <button onClick={this.incrementScore}>Upvote</button>\n        <button onClick={this.decrementScore}>Downvote</button>\n        <br />\n        <br />\n\n        {/* sumbit name and score of song to MongoDB Database*/}\n        <button\n          onClick={this.submit}\n          className=\"button\"\n          style={{ verticalAlign: \"middle\" }}\n        >\n          {\" \"}\n          <span> Save to Database </span>\n        </button>\n        <h1 style={{ display: this.state.sent_to_database ? \"block\" : \"none\" }}>\n          {\" \"}\n          Sent{\" \"}\n        </h1>\n      </div>\n    );\n  }\n}\n\nexport default Input;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AATA;AAUA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AANA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAxGA;AACA;AA0GA;;;;A","sourceRoot":""}