{"version":3,"file":"static/webpack/static/development/pages/index.js.768f896b90cfe7bc5474.hot-update.js","sources":["webpack:///./components/Retrieve.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport useSWR from \"swr\";\nimport { fetch } from \"../utils/fetch\";\nimport Table from \"./Table\";\nimport \"./style.css\";\n\n// //create your forceUpdate hook\n// function useForceUpdate() {\n//   console.log(\"updating...\");\n//   const [value, setValue] = useState(0); // integer state\n//   return () => setValue(value => ++value); // update the state to force render\n// }\n\nexport default function Retrieve(props) {\n  // swr returns a data and error parameter\n  // const forceUpdate = useForceUpdate();\n  const { data, error } = useSWR(\"/api/all\", fetch, {\n    // By default, useSWR will call the endpoint we specified (in this case, /api/all) every time we click away from\n    // the page. This can be really useful if we want to make sure the web app is always showing the latest data,\n    // but in this case, we don't need that behavior. See what happens if you set these options to true or remove them!\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false\n  });\n\n  if (error) {\n    return <div>Failed to load</div>;\n  }\n\n  if (!data) {\n    return <div>Loading</div>;\n  }\n\n  let obj = JSON.parse(JSON.stringify(data.result));\n\n  console.log(\"Retrieve: \" + obj);\n\n  const tableComponents = obj.map(item => {\n    return (\n      <Table key={item._id} song={item.song.song} score={item.song.score} />\n    );\n  });\n\n  // {data} can't do this with Javascript objects\n  return (\n    <div>\n      <table>\n        <tbody>\n          <tr>\n            <th>Song</th>\n            <th>Score</th>\n          </tr>\n          {tableComponents}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AALA;AAHA;AAAA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;A","sourceRoot":""}