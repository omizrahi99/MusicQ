{"version":3,"file":"static/webpack/static/development/pages/App.js.018d82caefd9cda62305.hot-update.js","sources":["webpack:///./pages/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Router from \"next/router\";\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout\";\nimport Results from \"../components/Results\";\nimport Input from \"../components/Input\";\nimport \"./style.css\";\n\nconst spotifySearchURL = \"https://api.spotify.com/v1/search?q=\";\nconst spotifyProfileURL = \"https://api.spotify.com/v1/me?access_token=\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search_term: \"\",\n      tracks: []\n    };\n    this.submitTrackForm = this.submitTrackForm.bind(this);\n    this.renderSearchResults = this.renderSearchResults.bind(this);\n  }\n\n  componentDidMount = () => {\n    if (window.location.href.indexOf(\"_token\") == -1) {\n      Router.push(\"/Login\");\n    }\n    console.log(\"cdm ran\");\n  };\n\n  submitTrackForm = event => {\n    event.preventDefault();\n    const { search_term } = this.state;\n    const { access_token } = this.props.url.query;\n\n    if (search_term != \"\") {\n      fetch(\n        `${spotifySearchURL}${search_term}&type=track&access_token=${access_token}`\n      )\n        .then(response => response.json())\n        .then(json => {\n          this.setState({ tracks: json.tracks.items });\n          return json.tracks;\n        });\n    }\n  };\n\n  renderSearchResults = () => {\n    if (this.state.tracks.length > 1) {\n      const { tracks } = this.state;\n      const { access_token } = this.props.url.query;\n      let allResults = [];\n      tracks.forEach((track, index) => {\n        if (track.album != undefined && track.album.images[0] != undefined) {\n          let hasImage = track.album.images[0];\n          allResults.push(\n            <Results key={track.id} imageURL={hasImage.url} name={track.name}>\n              <Link\n                href={`/track-albums?id=${track.id}&access_token=${access_token}`}\n              >\n                <a className=\"text-muted\">View {track.name} albums</a>\n              </Link>\n            </Results>\n          );\n        }\n      });\n      return allResults;\n    } else {\n      return \"\";\n    }\n  };\n\n  render() {\n    console.log(\"this.state\", this.state);\n    const { user } = this.props;\n    return (\n      <Layout>\n        <Input />\n        <hr className=\"linebreak\" />\n        <div className=\"row mt-5 justify-content-center\">\n          <form onSubmit={event => this.submitTrackForm(event)}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control text-center\"\n                placeholder=\"enter track name\"\n                onChange={event =>\n                  this.setState({ search_term: event.target.value })\n                }\n              />\n            </div>\n            <div className=\"form-group\">\n              <button\n                type=\"submit\"\n                className=\"form-control btn btn-outline-success\"\n              >\n                Search\n              </button>\n            </div>\n          </form>\n        </div>\n        <div className=\"row mt-5\">{this.renderSearchResults()}</div>\n      </Layout>\n    );\n  }\n}\n\nApp.getInitialProps = async function(context) {\n  const { access_token } = context.query;\n  const res = await fetch(spotifyProfileURL + access_token);\n  const user = await res.json();\n  return {\n    user\n  };\n};\n\nexport default App;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAWA;AACA;AACA;AACA;AAAA;AACA;AACA;AAhBA;AAkBA;AADA;AAAA;AACA;AAIA;AACA;AAGA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAjCA;AAmCA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxDA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AAQA;AACA;;;AAkDA;AAAA;AACA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA5FA;AACA;AA8FA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAKA;AADA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;;;;A","sourceRoot":""}